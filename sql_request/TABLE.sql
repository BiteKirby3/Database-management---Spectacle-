DROP TABLE IF EXISTS Billet;
DROP TABLE IF EXISTS CatBillet;
DROP TABLE IF EXISTS MembreAsso;
DROP TABLE IF EXISTS Exterieur;
DROP TABLE IF EXISTS Personnel;
DROP TABLE IF EXISTS Role;
DROP TABLE IF EXISTS PieceTheatre;
DROP TABLE IF EXISTS StandUp;
DROP TABLE IF EXISTS Concert;
DROP TABLE IF EXISTS Seance;
DROP TABLE IF EXISTS Spectacle;
DROP TABLE IF EXISTS Association;
DROP TABLE IF EXISTS Etudiant;
DROP TABLE IF EXISTS Personne;
DROP TABLE IF EXISTS CategorieAsso;
DROP TABLE IF EXISTS Salle;
DROP TABLE IF EXISTS Batiment;

CREATE TABLE Batiment
(
lettre CHAR PRIMARY KEY
);
 
CREATE TABLE Salle
(
code CHAR(4) PRIMARY KEY,
numero NUMERIC(3) NOT NULL,
type VARCHAR NOT NULL CHECK (type='cours' OR type='amphi' OR type='bureau'),
nb_max INTEGER NOT NULL CHECK (nb_max > 0),
bat CHAR NOT NULL,
FOREIGN KEY(bat) REFERENCES Batiment(lettre) ON UPDATE CASCADE
);
 
CREATE TABLE CategorieAsso
(
intitule VARCHAR PRIMARY KEY
);
 
CREATE TABLE Personne(
    CIN CHAR(36) PRIMARY KEY,
    nom  VARCHAR NOT NULL,
    prenom VARCHAR NOT NULL
);
 
CREATE TABLE Etudiant (
	CIN CHAR(36) PRIMARY KEY,
	FOREIGN KEY (CIN) REFERENCES Personne(CIN) ON UPDATE CASCADE
);
 
CREATE TABLE Association
(
nom VARCHAR PRIMARY KEY,
mail VARCHAR UNIQUE NOT NULL,
date_creation date NOT NULL,
site_web VARCHAR,
type VARCHAR NOT NULL,
salle CHAR(4) NOT NULL,
treso_asso CHAR(36) NOT NULL,
presid_asso CHAR(36) NOT NULL,
FOREIGN KEY(type) REFERENCES CategorieAsso(intitule),
FOREIGN KEY(salle) REFERENCES Salle(code) ON UPDATE CASCADE,
FOREIGN KEY(treso_asso) REFERENCES Etudiant(CIN) ON UPDATE CASCADE,
FOREIGN KEY(presid_asso) REFERENCES Etudiant(CIN) ON UPDATE CASCADE,
CHECK  (treso_asso<>presid_asso)
);
 
CREATE TABLE Spectacle
(
nom VARCHAR PRIMARY KEY,
duree TIME NOT NULL, 
asso_organisatrice VARCHAR NOT NULL, 
FOREIGN KEY (asso_organisatrice) REFERENCES Association(nom) ON UPDATE CASCADE
); 
 
 
CREATE TABLE Seance
(
id SERIAL PRIMARY KEY,
nom VARCHAR NOT NULL, 
salle CHAR(4) NOT NULL,
date_time TIMESTAMP NOT NULL CHECK (date_time > Now()), 
FOREIGN KEY (nom) REFERENCES Spectacle(nom) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (salle) REFERENCES Salle(code) ON UPDATE CASCADE,
UNIQUE(salle, date_time)
);
 
CREATE TABLE Concert
(
nom VARCHAR PRIMARY KEY, 
compositeur VARCHAR NOT NULL, 
annee NUMERIC(4) NOT NULL, 
genre VARCHAR NOT NULL, 
FOREIGN KEY (nom) REFERENCES Spectacle(nom) ON UPDATE CASCADE ON DELETE CASCADE
);
 
 
CREATE TABLE StandUp
(
nom VARCHAR PRIMARY KEY, 
genre VARCHAR NOT NULL, 
FOREIGN KEY (nom) REFERENCES Spectacle(nom) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE PieceTheatre
(
nom VARCHAR PRIMARY KEY, 
auteur VARCHAR NOT NULL, 
annee NUMERIC(4) NOT NULL, 
type VARCHAR NOT NULL, 
FOREIGN KEY (nom) REFERENCES Spectacle(nom) ON UPDATE CASCADE ON DELETE CASCADE
);

 
CREATE TABLE Role
(
CIN CHAR(36)  NOT NULL, 
nom_spec VARCHAR  NOT NULL, 
descriptif VARCHAR NOT NULL, 
FOREIGN KEY (CIN) REFERENCES Personne(CIN) ON UPDATE CASCADE, 
FOREIGN KEY (nom_spec) REFERENCES Spectacle(nom) ON UPDATE CASCADE ON DELETE CASCADE, 
PRIMARY KEY (CIN, nom_spec)
);
 
 
 
CREATE TABLE Personnel (
CIN CHAR(36) PRIMARY KEY,
statut VARCHAR NOT NULL,
FOREIGN KEY (CIN) REFERENCES Personne (CIN) ON UPDATE CASCADE
);
 
CREATE TABLE Exterieur (
CIN CHAR(36) PRIMARY KEY,
telephone CHAR(10) NOT NULL,
organisme VARCHAR NOT NULL,
FOREIGN KEY (CIN) REFERENCES Personne(CIN) ON UPDATE CASCADE
);
 
CREATE TABLE MembreAsso(
nom_asso VARCHAR,
membre CHAR(36),
PRIMARY KEY(nom_asso, membre),
FOREIGN KEY(nom_asso) REFERENCES Association(nom) ON UPDATE CASCADE,    
FOREIGN KEY(membre) REFERENCES Etudiant(CIN) ON UPDATE CASCADE
);
 
CREATE TABLE CatBillet (
  categorie VARCHAR NOT NULL,
  Tarif FLOAT NOT NULL CHECK (Tarif >= 0),
  PRIMARY KEY(Categorie)
);
 
CREATE TABLE Billet (
  identifiant SERIAL PRIMARY KEY,
  categorie VARCHAR NOT NULL,
  date_creation DATE NOT NULL,
  seance SERIAL NOT NULL,
  acheteur CHAR(36),
  FOREIGN KEY (seance) REFERENCES Seance (id) ON DELETE CASCADE,
  FOREIGN KEY (categorie) REFERENCES CatBillet (categorie),
  FOREIGN KEY (acheteur) REFERENCES Personne(CIN) ON UPDATE CASCADE
);

